*filter
-P INPUT DROP
-P FORWARD DROP
-P OUTPUT ACCEPT
-N TCP
-N UDP
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -m conntrack --ctstate INVALID -j DROP
-A INPUT -p icmp -m icmp --icmp-type 8 -m conntrack --ctstate NEW -j ACCEPT
-A INPUT -p udp -m conntrack --ctstate NEW -j UDP
-A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -m conntrack --ctstate NEW -j TCP
-A INPUT -p udp -j REJECT --reject-with icmp-port-unreachable
-A INPUT -p tcp -j REJECT --reject-with tcp-reset
-A INPUT -j REJECT --reject-with icmp-proto-unreachable

{%- if accept_tcp_ports|length > 0 %}
-A TCP -p tcp -m multiport --dports {{ accept_tcp_ports|join(",") }} -j ACCEPT
{%- endif %}

{%- for from in accept_tcp_from %}
{%- for source in from.source %}
-A TCP -p tcp --dport {{ from.port }} -s {{ source }} -j ACCEPT
{%- endfor %}
{%- endfor %}

{%- for port in limit_tcp_ports %}
-A TCP -p tcp -m tcp --dport {{ port }} -m recent --update --seconds 30 --hitcount 3 --name limit-tcp-{{ port }} --mask 255.255.255.255 --rsource -j REJECT --reject-with icmp-port-unreachable
-A TCP -p tcp -m tcp --dport {{ port }} -m recent --set --name limit-tcp-{{ port }} --mask 255.255.255.255 --rsource -j ACCEPT
{%- endfor %}
COMMIT
{# Enforce newline #}
